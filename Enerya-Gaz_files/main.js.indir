// QUERY SELECTOR SNIPPET
const select = (selector, scope = document) => {
  return scope.querySelector(selector);
};
const selectAll = (selector, scope = document) => {
  return scope.querySelectorAll(selector);
};

// HERO PARALLAX EFFECT
const heroParallaxEffect = () => {
  const heroSectionBg = select(".hero-section-bg");
  const heroDecorCircle = select(".hero-section .decor-circle");
  heroSectionBg.style.transform = `translateY(${window.scrollY / 5}px)`;
  heroDecorCircle.style.transform = `translateY(${window.scrollY / 9}px)`;
};

// HEADER SCROLL EFFECT
const headerScrollEffect = () => {
  const header = document.querySelector(".header");
  header.classList.toggle("sticky", window.scrollY > 0);
};

window.addEventListener("scroll", () => {
  heroParallaxEffect();
  headerScrollEffect();
});

// REVEALING ON SCROLL
const the_animation = selectAll(".reveal");

const observer = new IntersectionObserver(
  (entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("active");
      }
      // else {
      //     entry.target.classList.remove('active')
      // }
    });
  },
  { threshold: 0.3 }
);

for (let i = 0; i < the_animation.length; i++) {
  const elements = the_animation[i];

  observer.observe(elements);
}

// CARDS SWITCH
const chosenCards = selectAll(".chosen-card");
const advantagesCards = selectAll(".advantages-card");

for (let i = 0; i < advantagesCards.length; i++) {
  advantagesCards[i].addEventListener("click", () => {
    chosenCards.forEach((el) => el.classList.remove("active"));
    select(`[data-card="${advantagesCards[i].id}"]`).classList.add("active");
    advantagesCards.forEach((el) => el.classList.remove("active"));
    select(`#${advantagesCards[i].id}`).classList.add("active");
  });
}

// NAVIGATION
const scrollToElem = (elem) => {
  select(elem).scrollIntoView({ behavior: "smooth" });
};

// YEAR
selectAll(".year").forEach((el) => {
  el.innerText = new Date().getFullYear();
});

// MOBILE MENU
let menuUnderlay = select(".nav-underlay");
let menuOpenImg = select(".menu-btn-img");
let menuCloseImg = select(".menu-close-img");
let menuMobile = select(".mob-menu");

const menuOpening = () => {
  menuMobile.style.right = "0";
  menuUnderlay.classList.add("active");
};

const menuClosing = () => {
  menuMobile.style.right = "-100%";
  menuUnderlay.classList.remove("active");
};

menuOpenImg.addEventListener("click", () => {
  menuOpening();
});
menuCloseImg.addEventListener("click", () => {
  menuClosing();
});
menuUnderlay.addEventListener("click", () => {
  menuClosing();
});

// MENU ITEMS HIGHLIGHTING
const sections = document.querySelectorAll("section");
const navListItems = document.querySelectorAll(".nav-list li a");

window.addEventListener("scroll", () => {
  let current = "";

  sections.forEach((section) => {
    const sectionTop = section.offsetTop;
    const sectionHeight = section.clientHeight;
    if (pageYOffset >= sectionTop - sectionHeight) {
      current = section.getAttribute("id");
    }
  });

  navListItems.forEach((item) => {
    item.classList.remove("highlighted");
    if (item.classList.contains(current)) {
      item.classList.add("highlighted");
    }
  });
});
